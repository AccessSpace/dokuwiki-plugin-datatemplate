Caching in Datatemplate:

- Overall Goal:
Decompose SQL statement to get a list of pages that are involved in generating the datatemplate output.
If any of the pages has changed, the complete SQL needs to be executed and the result stored in a file.
The filename could maybe be a hash of the SQL statement. Any limits need to be removed from the SQL and
applied later on the cached data. In principle this should be done for sorting as well, but this might
be more complicated.

- Generation of List of Dependencies:
Generate minimal SQL that creates a page list for all applied filters. This is done by using the buildSQL function
of the data plugin with a minimal data array, having only the pageid as column and copying the filters from
the original query.

- Cache generation and usage:
The cache should be used if none of the dependencies, i.e. the wiki pages involved, have changed since the
generation of the cache.

As a first step, the cache can be managed by the plugin itself, possibly by adding metadata to the page information
and using this instead of re-executing the SQL every time. Probably the best way to identify the cache is via a
hash of the SQL statement where limits have been removed.

As a second step, we could use the parser_cache_use event of dokuwiki to have better integration into the dokuwiki
infrastructure.